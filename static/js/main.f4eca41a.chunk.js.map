{"version":3,"sources":["components/Header.js","components/Footer.js","components/Beer.js","components/Description.js","components/BeerList.js","components/Store.js","components/StoreList.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","style","backgroundColor","href","data-toggle","data-placement","title","width","height","alt","paddingLeft","Footer","Beer","_this","this","props","data","image_thumb_url","src","name","onClick","showDescButton","goToStoreButton","id","Component","Description","_ref","hideDescButton","showDesc","price","tasting_notes","serving_suggestion","showHideClassName","BeerList","productID","updateStore","history","push","concat","_this2","react","datas","map","components_Beer","key","desc","description","components_Description","price_in_cents","tasting_note","Store","storeDataResults","storeDataResult","address_line_1","address_line_2","postal_code","telephone","goToMapStore","latitude","longitude","loadMoreStores","rootStoreURL","process","rootProductURL","App","state","nextPage","showStore","page","lat","lng","setState","updateMap","fetch","url","json","result","components_BeerList","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App","document","getElementById","URL","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f4eca41a.chunk.js","sourcesContent":["import React from 'react';\n\nexport default () => (\n  <header>\n    <nav className=\"navbar fixed-top navbar-light bg-inverse\" style={{backgroundColor: \"#512b1b\"}}>\n    <a className=\"navbar-brand\" href=\"#\">\n      <span data-toggle=\"tooltip\" data-placement=\"top\" title=\"Beaus Bears\">\n          <img className =\"logo-custom d-inline-block align-center\" width=\"75px\" height=\"75px\" alt=\"\"/>\n      </span>\n      <span style={{paddingLeft: \"15px\"}}>&nbsp;</span>\n      <span className=\"title-custom align-center\">Beaus</span>\n    </a>\n  </nav>\n</header>\n);","import React from 'react';\n\nexport default () => {\n  return (\n    <footer className=\"container-fluid\">\n      <p>Copyright Beaus</p>\n      <p className=\"float-right\">Top</p>\n    </footer>\n  );\n}","import React, { Component } from 'react';\n\nclass Beer extends Component {\n  render() {\n    return (\n      <div className=\"beer-container\">\n        <div className=\"beer-image\">\n          {/* This will show either the image or logo of beau's */}\n          { this.props.data.image_thumb_url \n            ?\n            <div className=\"picture-container\">\n              <img \n              src={ this.props.data.image_thumb_url }\n              alt=\"\"\n              /> \n            </div> \n            :\n            <div>\n              <img \n                src=\"/styles/img/beaus-image.png\" \n                alt=\"\"\n              /> \n            </div>                  \n          }\n        </div>\n          <p className=\"beer-name\">{ this.props.data.name }</p>\n        <button\n          className=\"button button-description\"\n          onClick={ () => this.props.showDescButton(this.props.data) }\n        >\n        Description\n        </button>\n        <button\n          className=\"button button-stores\"\n          onClick={ () => this.props.goToStoreButton(this.props.id) }\n        >Stores\n        </button>\n    </div>\n    )\n  }\n}\n\nexport default Beer;","import React from 'react';\n\nconst Description = ({ hideDescButton, showDesc, name, price, tasting_notes, serving_suggestion }) => {\n  const showHideClassName = showDesc ? \"modal display-block\" : \"modal display-none\";\n  return(\n    <div className={ showHideClassName }>\n      <section className=\"modal-main\">\n        <ul>\n        <li>Name: {name}</li>\n        <li>Price: {price}</li>\n        <li>Tasting Notes: {tasting_notes}</li>\n        <li>Serving Suggestion: {serving_suggestion}</li>\n        </ul>\n\n        <button \n          className=\"button button-desc-close\"  \n          onClick={ () => hideDescButton() }\n        >\n          Close\n        </button>\n      </section>\n    </div>\n  );\n};\n\nexport default Description;","import React, { Component, Fragment } from 'react';\nimport Beer from './Beer';\nimport Description from './Description';\nimport Header from './Header';\n\nclass BeerList extends Component {\n\n  goToStoreButton = (productID) => {\n    this.props.updateStore(productID);\n    this.props.history.push(`/store/${productID}`);\n  };\n  \n  render() {\n    return (\n      <Fragment>\n        <div className=\"beerlist-container\">\n          <ul className=\"beerlist-list\">\n            { this.props.datas.map(data =>\n              <Beer \n                data={ data }\n                key={ data.id }\n                id={ data.id }\n                desc={ data.description }\n                showDescButton={ this.props.showDescButton }\n                goToStoreButton={ this.goToStoreButton }\n              />\n            )}\n          </ul>\n          <Description \n            showDesc={ this.props.showDesc }\n            hideDescButton = { this.props.hideDescButton } \n            name= { this.props.name }\n            price= { this.props.price_in_cents }\n            tasting_notes= { this.props.tasting_note }\n            serving_suggestion= { this.props.serving_suggestion } \n          />\n        </div> \n      </Fragment>\n    )\n  }\n}\n\nexport default BeerList;","import React, { Fragment } from 'react';\n\nexport default (props) => (\n  <Fragment>\n    <div className=\"store-wrapper\">\n      {props.storeDataResults.map((storeDataResult) => {\n        return(\n          <div key={storeDataResult.id}>\n            <div className=\"store-container\">\n            Address: {storeDataResult.address_line_1}\n            Address 2: {storeDataResult.address_line_2}\n            Postal Code: {storeDataResult.postal_code}\n            Telephone: {storeDataResult.telephone}\n            <button \n              className=\"button button-find-store\"\n              onClick={ () => props.goToMapStore(storeDataResult.latitude, \n                                storeDataResult.longitude)}>\n              Find Store\n              </button>\n            </div>\n          </div>\n        )}            \n      )}\n    </div>\n    <button \n      className=\"button button-load-stores\"\n      onClick = { () => props.loadMoreStores() }>\n    Load More\n    </button>            \n  </Fragment>  \n);","import React, { Component } from 'react';\nimport Store from './Store';\nimport StoreMaps from './StoreMaps';\n\nconst apiKey = process.env.REACT_APP_API_KEY;\nconst rootStoreURL = `http://lcboapi.com/stores?access_key=${apiKey}`;\n\nclass StoreList extends Component {\n  state = {\n    storeDataResults: [],\n    nextPage:\"\",\n\n  };\n\n  async componentDidMount() {\n    // make api call to stores\n    const productID = this.props.state.productID;\n    const storeURL = await fetch(`${rootStoreURL}&product_id=${productID}`);\n    const storeData = await storeURL.json();\n    console.log(storeData);\n    const storeDataResults = storeData.result;\n    const nextPage = storeData.pager.next_page_path;\n    this.setState({\n      storeDataResults,\n      nextPage\n    });\n  };\n\n  loadMoreStores = async() => {\n    const nextPage = this.state.nextPage;\n    const nextPageURL = await fetch(`http://lcboapi.com${nextPage}`);\n    const nextPageData = await nextPageURL.json();\n    const afterNextPage = nextPageData.pager.next_page_path;\n    this.setState(() => ({\n      storeDataResults: nextPageData.result,\n      nextPage: afterNextPage\n    }));\n  };\n  \n  goToMapStore = (lat, lng) => {\n    this.props.updateMap(lat, lng);\n    this.props.history.push(`/map/${lat}`);\n  };\n\n  render() {\n    return (\n      <div className=\"store\">\n        <Store \n          storeDataResults={ this.state.storeDataResults }\n          loadMoreStores= { this.loadMoreStores }\n          goToMapStore={ this.goToMapStore }\n        />\n        {/* <StoreMaps /> */}\n      </div>\n    );\n  };\n};\n\nexport default StoreList;","import React, { Component, Fragment } from 'react';\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport BeerList from './components/BeerList';\nimport StoreList from './components/StoreList';\nimport StoreMaps from './components/StoreMaps';  \nimport './styles/App.css';\n\nconst apiKey = process.env.REACT_APP_API_KEY;\nconst rootProductURL = `https://lcboapi.com/products?access_key=${apiKey}`;\n\nclass App extends Component {\n  state = {\n    datas: [],\n    storeDataResult: [],\n    nextPage:\"\",\n    showDesc: false,\n    showStore: false,\n    page: null,\n    name:\"\",\n    price_in_cents: null,\n    tasting_note: \"\",\n    description: \"\",\n    productID:\"\",\n    lat: null,\n    lng: null\n  };\n\n  // Instead of a prompt to ask what type of beer, below lifecycle method \n  // used to show Beau's beers preference to show on the app\n  async componentDidMount() {\n    // Documentation says API Call says maxiumum per page is 200. It is incorrect. Only 100.\n    // API call filters for only beau's brewery, that is available at LCBO and is seasonal. Since Lug Tread is not seasonal, already filtered out.\n    const url = await fetch(`${rootProductURL}&q=beaus+brewing&per_page=100&where_not=is_discontinued,is_dead&where=is_seasonal`)\n    const datas = await url.json();\n    this.setState({\n      datas: datas.result\n    });\n  };\n\n  // Since description can be empty, making variables for other descriptions of the beer to display\n  showDescButton = (desc) => {\n    // package is reserved word in strict mode. Make another name\n    const { name, price_in_cents, tasting_note, serving_suggestion } = desc;\n    this.setState({\n      showDesc: true,\n      name,\n      price_in_cents,\n      tasting_note,\n      serving_suggestion\n    });\n  };\n  // Button to hide the description of the beer\n  hideDescButton = () => {\n    this.setState({\n      showDesc: false\n    });\n  };\n  // Refresh the page depending on your preference\n  updateStore = (productID) => {\n    this.setState({\n      productID\n    });\n  };\n\n  updateMap = (lat, lng) => {\n    this.setState({\n      lat,\n      lng\n    })\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <Header />\n        <BeerList \n          datas={this.state.datas}\n          showDesc={this.state.showDesc}\n          showDescButton={this.showDescButton}\n          hideDescButton={this.hideDescButton}\n        />\n        <Footer />\n      </Fragment>\n    );\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}